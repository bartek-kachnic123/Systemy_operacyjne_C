.SUFFIXES: .c .cpp .o .x .h
#==============================================================================
DIR = $(notdir $(CURDIR))
SYSNAME = $(shell uname -s)
#==============================================================================
NAME1 = prog_
NAME2 = dane
NAME3 = wyniki
#==============================================================================
# Pliki tekstowe:
DANE = $(NAME2).txt
WYNIKI = $(NAME3).txt
#==============================================================================
# Programy wykonawcze:
EXEC1  = $(NAME1)1.x  
#==============================================================================
# Pliki powstale po kompilacji plikow zrodlowych, tzw. object files
OBJS1  = $(NAME1)1.o
#==============================================================================
# Makra  przewidziane na przyszlosc.
LIBS1  = 
#==============================================================================
# Opcje kompilatora i linkera;
LFLAGS = -Wall -std=c99 -pedantic -O
#==============================================================================
# Kompilator i linker (czesto ta sama nazwa)
CO = gcc
LD = $(CO)
#==============================================================================
%.o: %.c %.h
	$(CO) $(LFLAGS) -c $<
# Jak wyzej, ale bez zaleznosci od plikow naglowkowych
%.o: %.c
	$(CO) $(LFLAGS) -c $<
#==============================================================================
$(EXEC1): $(OBJS1) $(LIBS1) 
	$(LD) -o $@ $(LFLAGS) $^	
#==============================================================================
.PHONY: run1 
#==============================================================================
run1: $(EXEC1) 
	./$(EXEC1) $(DANE) $(WYNIKI)
	diff -s $(DANE) $(WYNIKI)

#==============================================================================

###############################################################################
# Sprzataczka (tez "phony target")
###############################################################################
.PHONY: clean tar
clean:                                                     
	rm -f *.o  *~ *.a *.so *.x core core* a.out; rm -rf ${LIB_DIR}
# Archiwizacja i kompresja
tar: clean
	(cd ../; tar -cvzf $(DIR).tar.gz  $(DIR) )
